---
- name: Creating mongodb directories
  file:
    path: "{{ item }}"
    state: "directory"
    mode: 0755
  with_items:
    - "{{ mongo_dir }}"

- name: Setting mongod config
  template:
    src: mongod.conf.j2
    dest: "{{ mongo_conf }}"
  notify: restart mongod
  tags:
    - config

- name: Setting mongod-arbiter config
  template:
    src: mongod-arbiter.conf.j2
    dest: "{{ mongo_dir }}/mongod-arbiter.conf"
  notify: restart mongod-arbiter
  when: "has_svc_mongod_arbiter | default(False)"
  tags:
    - config

- name: Generating mongo key file
  template:
    src: "mongo.key.j2"
    dest: "{{ mongo_dir }}/mongo.key"
  no_log: "{{tower_show_secrets}}"

- include_tasks: "os/{{ ansible_distribution }}/main.yml"

- name: Setting mongo.key permissions
  file:
    path: "{{ mongo_dir }}/mongo.key"
    owner: "{{ mongo_user }}"
    mode: 0400

- name: Install MongoDB logrotated config
  template:
    src: "etc/logrotate.d/mongod.conf.j2"
    dest: "/etc/logrotate.d/mongod.conf"
  when: "'Linux' in ansible_system and 'file' in mongo_logging_driver"
  tags:
    - config

- name: Enable MongoDB system service
  service:
    name: "{{ mongod_system_service }}"
    enabled: yes
    state: started

- name: Create MongoDB arbiter directory
  file:
    path: "{{ noc_root }}/var/db/mongo-arbiter"
    owner: "{{ mongo_user }}"
    group: "{{ mongo_user }}"
    mode: 0700
    state: directory
  when: "mongod_power == 'arbiter'"

- name: Install MongoDB arbiter logrotated config
  template:
    src: "etc/logrotate.d/mongod-arbiter.conf.j2"
    dest: "/etc/logrotate.d/mongod-arbiter.conf"
  when:
    - "mongod_power == 'arbiter'"
    - "'Linux' in ansible_system"
  tags:
    - config

- name: Install shell.js
  template:
    src: shell.js.j2
    dest: "{{ mongo_dir }}/shell.js"
  no_log: "{{tower_show_secrets}}"
  tags:
    - config

- name: Enable MongoDB arbiter system service
  service:
    name: "{{ mongod_arbiter_system_service }}"
    enabled: yes
    state: started
  when:
    - "mongod_power == 'arbiter'"

- name: include master settings
  include_tasks: "master.yml"
  when: "mongod_power == 'bootstrap'"
  tags:
    - rs_init

- name: Install mongodb monitoring
  template:
    src: "etc/telegraf/telegraf.d/mongodb.conf.j2"
    dest: "{{ telegraf_confd_path }}/mongodb.conf"
  notify: reload telegraf
  when:
    - "'svc-telegraf' in groups"
    - "inventory_hostname in groups['svc-telegraf-exec']"
  no_log: "{{tower_show_secrets}}"
  tags:
    - config
    - telegraf

- name: place mongod consul check
  import_role:
    name: consul
    tasks_from: service
  vars:
    consul_service_name: mongo
    consul_service_tags: ""
    consul_service_port: 27017
    consul_service_check_type: "script"
    consul_service_check_value: "mongodb.sh"
    consul_service_check_interval: "10s"
    consul_service_check_http_skip_verify: False
    consul_service_check_script: mongodb.sh.j2