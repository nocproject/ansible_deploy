---
# http://www.ibm.com/support/knowledgecenter/SSEPGG_10.5.0/com.ibm.db2.luw.qb.server.doc/doc/t0008238.html?lang=ru
- name: tune systcl for PostgesSQL
  sysctl:
    name: "{{item.name}}"
    value: "{{item.value}}"
    state: present
    reload: yes
  with_items:
    - { name: kernel.shmmax, value: "{{ kernel_shmmax }}" }
    - { name: kernel.shmall, value: "{{ kernel_shmall }}" }
    - { name: kernel.sem, value: '250 256000 400 4096' }
  tags:
    - config

- name: Add EPEL Repo
  yum:
    name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ ansible_distribution_major_version }}.noarch.rpm
    state: present
    validate_certs: yes
  register: epel_task_result
  retries: 4
  delay: 2
  until: epel_task_result|succeeded
  environment:
    https_proxy: "{{http_proxy}}"
    http_proxy: "{{http_proxy}}"
  tags:
    - repo

- name: Enable the PostgreSQL repository RHEL
  yum:
    name: http://download.postgresql.org/pub/repos/yum/{{postgres_version}}/redhat/rhel-{{ ansible_distribution_major_version }}-{{ ansible_architecture }}/pgdg-redhat{{postgres_version|replace(".","")}}-{{postgres_version}}-2.noarch.rpm
    state: present
  when: postgres_version=='9.4'
  environment:
    http_proxy: "{{http_proxy}}"
  tags:
    - repo

- name: Enable the PostgreSQL repository RHEL
  yum:
    name: http://download.postgresql.org/pub/repos/yum/{{postgres_version}}/redhat/rhel-{{ ansible_distribution_major_version }}-{{ ansible_architecture }}/pgdg-redhat{{postgres_version|replace(".","")}}-{{postgres_version}}-3.noarch.rpm
    state: present
  when: postgres_version=='9.6'
  environment:
    http_proxy: "{{http_proxy}}"
  tags:
    - repo

- name: Install PostgreSQL
  yum:
    name: "{{item}}"
    state: present
    update_cache: yes
  with_items:
    - postgresql{{postgres_version|replace(".","")}}-server
    - postgresql{{postgres_version|replace(".","")}}-contrib
    - postgresql{{postgres_version|replace(".","")}}-plpython
    - python-psycopg2
  environment:
    http_proxy: "{{http_proxy}}"
    https_proxy: "{{http_proxy}}"

- name: PostgreSQL init db
  command: '{{postgres_bin_dir}}/postgresql{{postgres_version|replace(".","")}}-setup initdb'
  args:
    creates: /var/lib/pgsql/{{ postgres_version }}/initdb.log


- name: Install postgres limits file
  template:
    src: "etc/security/limits.d/postgres_limits.conf.j2"
    dest: "/etc/security/limits.d/postgres_limits.conf"
  tags:
    - config
