---
- name: "Python{{ noc_py3_ver }} | Check that {{ noc_py3_ver }} is still not installed"
  stat:
    path: "/opt/python{{ noc_py3_ver }}/bin/python{{ noc_py3_ver }}"
  register: already_installed
  ignore_errors: true

- name: Create dir for compiling
  file:
    path: "/opt/python{{ noc_py3_ver }}"
    state: directory
  when: not already_installed.stat.exists

- name: "Python{{ noc_py3_ver }} | Download"
  get_url:
    url: "https://www.python.org/ftp/python/{{ py_version['py' ~ noc_py3_ver] }}/Python-{{ py_version['py' ~ noc_py3_ver] }}.tar.xz"
    dest: "/opt/python{{ noc_py3_ver }}"
    checksum: "md5:{{ py_hashes['py' ~ noc_py3_ver] }}"
  environment:
    https_proxy: "{{ http_proxy }}"
    http_proxy: "{{ http_proxy }}"
  when: not already_installed.stat.exists

- name: "Python{{ noc_py3_ver }} | Uncompress"
  unarchive:
    src={{ py_data.tar_file }}
    dest=/tmp
    copy=no
    creates="{{ py_data.sources }}"
  when: should_install and not already_installed.stat.exists

- name: "Python{{ noc_py3_ver }} | Compile and install"
  command: "{{ item }}"
  args:
    chdir: "{{ py_data.sources }}"
  with_items:
    - "./configure --enable-optimizations --prefix {{ /opt/python{{ noc_py3_ver }} }}"
    - make
    - make install
  when: should_install and not already_installed.stat.exists

- name: "Python{{ noc_py3_ver }} | Create python_major_version symlink"
  file:
    src={{ py_data.install }}
    dest='{{ base_install_folder }}/python{{ py_data.major_version }}'
    state=link
  when: should_install and not already_installed.stat.exists

#set noc_init_python_path
