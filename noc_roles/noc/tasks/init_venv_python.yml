- name: Initialize virtualenv
  pip:
    chdir: "{{noc_root}}"
    name: "pip"
    virtualenv: "{{ noc_root }}"
    state: "present"
  environment:
    https_proxy: "{{http_proxy}}"
    http_proxy: "{{http_proxy}}"
    LC_ALL: C

- name: Fix broken PIP versions
  command: "{{ noc_root }}/scripts/deploy/fix-pip"
  args:
    chdir: "{{ noc_root }}"
  register: result
  changed_when: "'CHANGED' in result.stdout"
  environment:
    https_proxy: "{{http_proxy}}"

- name: Upgrade PIP
  pip:
    chdir: "{{noc_root}}"
    virtualenv: "{{noc_root}}"
    name: "pip"
    state: latest
  environment:
    http_proxy: "{{http_proxy}}"
    https_proxy: "{{http_proxy}}"
    LC_ALL: C

- name: Upgrade setuptools
  pip:
    name: setuptools
    chdir: "{{noc_root}}"
    virtualenv: "{{noc_root}}"
    state: latest
  environment:
    http_proxy: "{{http_proxy}}"
    https_proxy: "{{http_proxy}}"
  tags:
    - requirements

- name: Relink site-packages
  command: "{{ noc_root }}/scripts/deploy/link-site-packages"
  args:
    chdir: "{{ noc_root }}"
  register: s
  changed_when: "'CHANGED' in s.stdout"

- name: Install mercurial for freebsd
  pip:
    chdir: "{{noc_root}}"
    name: "mercurial"
    virtualenv: "{{noc_root}}"
  environment:
    http_proxy: "{{http_proxy}}"
    https_proxy: "{{http_proxy}}"
    PATH: "{{ ansible_env.PATH }}:/usr/pgsql-{{ postgres_version }}/bin/"
  tags:
    - requirements
  when: "'FreeBSD' in ansible_system"

- name: Install node python packages(should take a while for a first time)
  pip:
    chdir: "{{noc_root}}"
    requirements: "requirements/node.txt"
    virtualenv: "{{noc_root}}"
    extra_args: "--trusted-host cdn.getnoc.com --find-links https://cdn.getnoc.com/npkg/simple/ --upgrade"
  environment:
    http_proxy: "{{http_proxy}}"
    https_proxy: "{{http_proxy}}"
    PATH: "{{ ansible_env.PATH }}:/usr/pgsql-{{ postgres_version }}/bin/"
    CFLAGS: "{{ pip_cflags | default('') }}"
    LDFLAGS: "{{ pip_ldflags | default('') }}"
  tags:
    - requirements

- name: Install noc.pth
  template:
    src: "lib/python/site-packages/noc.pth.j2"
    dest: "{{noc_root}}/lib/python/site-packages/noc.pth"

- name: Check sitecustomize
  stat:
    path: "{{noc_root}}/lib/python/site-packages/sitecustomize.py"
  register: sitecustomizes
  tags:
    - config

- name: Install sitecustomize.py
  template:
    src: "lib/python/site-packages/sitecustomize.py.j2"
    dest: "{{noc_root}}/lib/python/site-packages/sitecustomize.py"
  when: sitecustomizes.stat.exists == False
  tags:
    - config

- name: Update site.py
  replace:
    dest: "{{noc_root}}/lib/python/site.py"
    regexp: "encoding = 'ascii'"
    replace: "encoding = 'utf-8'"
  when: sitecustomizes.stat.exists == True