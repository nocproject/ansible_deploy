---
- name: gather py3 facts
  vars:
    ansible_python_interpreter: /usr/bin/python3
  setup:
    gather_subset:
      - 'min'

- name: Initialize virtualenv3
  pip:
    chdir: "{{ noc_root }}"
    name: "pip"
    virtualenv: "{{ noc_root }}"
    virtualenv_python: /usr/bin/python3
    state: "latest"
  environment:
    https_proxy: "{{ http_proxy }}"
    http_proxy: "{{ http_proxy }}"
    LC_ALL: C

- name: Install wheel
  pip:
    name: wheel
    chdir: "{{ noc_root }}"
    virtualenv: "{{ noc_root }}"
    state: present
  environment:
    http_proxy: "{{ http_proxy }}"
    https_proxy: "{{ http_proxy }}"
  tags:
    - requirements

- name: Upgrade setuptools
  pip:
    name: setuptools
    chdir: "{{ noc_root }}"
    virtualenv: "{{ noc_root }}"
  environment:
    http_proxy: "{{ http_proxy }}"
    https_proxy: "{{ http_proxy }}"
  tags:
    - requirements

- name: Install mercurial for freebsd
  pip:
    chdir: "{{ noc_root }}"
    name: "mercurial"
    virtualenv: "{{ noc_root }}"
  environment:
    http_proxy: "{{ http_proxy }}"
    https_proxy: "{{ http_proxy }}"
    PATH: "{{ ansible_env.PATH }}:/usr/pgsql-{{ postgres_version }}/bin/"
  tags:
    - requirements
  when: "'FreeBSD' in ansible_system"

- name: Install node python packages(should take a while for a first time)
  pip:
    chdir: "{{ noc_root }}"
    requirements: "requirements/node.txt"
    virtualenv: "{{ noc_root }}"
    extra_args: "--trusted-host cdn.getnoc.com --find-links https://cdn.getnoc.com/npkg/simple/ --upgrade"
  environment:
    http_proxy: "{{ http_proxy }}"
    https_proxy: "{{ http_proxy }}"
    PATH: "{{ ansible_env.PATH }}:/usr/pgsql-{{ postgres_version }}/bin/"
    CFLAGS: "{{ pip_cflags | default('') }}"
    LDFLAGS: "{{ pip_ldflags | default('') }}"
  tags:
    - requirements

- name: Install noc.pth
  template:
    src: "lib/python/site-packages/noc.pth.j2"
    dest: "{{ noc_root }}/lib/python{{ ansible_python.version.major }}.{{ ansible_python.version.minor }}/site-packages/noc.pth"

- name: Update site.py
  replace:
    dest: "{{ noc_root }}/lib/python{{ ansible_python.version.major }}.{{ ansible_python.version.minor }}./site.py"
    regexp: "encoding = ['\"]ascii['\"]"
    replace: "encoding = 'utf-8'"
  tags:
    - config
