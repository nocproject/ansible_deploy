---
- block:
    - name: fail if noc repo is not set
      fail:
        msg: "Noc repo is empty. What an awful pity fatal fail. Set noc repo on noc service it tower."
      when:
        - noc_repo == '' or noc_repo is not defined

    - name: fail if noc version is not set
      fail:
        msg: "Noc version is empty. What an awful pity fatal fail. Set noc version on noc service it tower."
      when:
        - noc_version == '' or noc_version is not defined

    - name: fail if noc root is not set
      fail:
        msg: "Noc root is empty. What an awful pity fatal fail. Set noc root on noc service it tower."
      when:
        - noc_root == '' or noc_root is not defined

    - name: check if noc_root exists
      stat:
        path: "{{ noc_root }}"
      register: noc_root_state

    - block:
        - name: check if noc under mercurial control
          stat:
            path: "{{ noc_root }}/.hg"
          register: noc_hg_state

        - name: fail install if we are under mercurial
          fail:
            msg: |
              It seems noc under mercurial control.
              You have to add migrate_git role in tower additional roles.
              Manual: https://code.getnoc.com/noc/tower/blob/master/docs/migrate_git.md
          when:
            - noc_hg_state.stat.exists is defined
            - noc_hg_state.stat.exists
            - has_svc_git_migrate is not defined
      when:
        - noc_root_state.stat.exists is defined
        - noc_root_state.stat.exists
  when:
    - has_svc_noc is defined
  tags:
    - checks

- name: Warn about omap is selected
  fail:
    msg: |
      Be aware that omap service is depricated and should not be used.
      Read https://kb.nocproject.org/x/OwB2Ag for more details.
  when:
    - has_svc_omap is defined
  tags:
    - checks

- block:
    - name: Download source archive
      unarchive:
        src: "https://code.getnoc.com/noc/noc/-/archive/{{ noc_version }}/noc-{{ noc_version }}.tar.gz"
        remote_src: true
        dest: "{{ tower_dist_dir }}"
      delegate_to: 127.0.0.1
      environment:
        https_proxy: "{{ http_proxy }}"

    - name: Check NOC version 1/2
      slurp:
        src: "{{ tower_dist_dir }}/noc-{{ noc_version }}/VERSION"
      delegate_to: 127.0.0.1
      register: noc_version_number_base

    - name: Check NOC version 2/2
      set_fact:
        noc_ver_numb_rel: "{{ noc_version_number_base.content | b64decode }}"

    - name: Fail about too new NOC for this tower
      fail:
        msg: |
          Possibly you try to deploy NOC with old tower version {{ tower_version }}
          NOC releases older than 20.3 should be deployed with tower 1.0.0+ version.
          Please consider upgrade tower https://code.getnoc.com/noc/tower/-/blob/master/UPDATING.md
      when:
        - noc_ver_numb_rel is version('20.4', '>=')
  when:
    - has_svc_noc is defined
  tags:
    - checks
