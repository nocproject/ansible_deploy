---
- name: Check ansible version
  fail:
    msg: "{{ ansible_version.full }} is not supported by this role. Please use at least 2.5.0.0. See https://code.getnoc.com/noc/tower/blob/master/UPDATING.md for details."
  when:
    - ansible_version is defined
    - ansible_version.full is version_compare('2.5.0', '<')
  tags:
    - checks

- name: Check distribution compatibility
  fail:
    msg: "{{ ansible_distribution }} is not supported by NOC"
  when:
    - ansible_distribution not in ['RedHat', 'CentOS', 'Debian', 'Ubuntu', 'FreeBSD']
  tags:
    - checks


- name: Fail if not a new release of Red Hat / CentOS
  fail:
    msg: "{{ ansible_distribution_version }} is not an acceptable version of {{ ansible_distribution }} for this role"
  when:
    - ansible_distribution in ['RedHat', 'CentOS']
    - ansible_distribution_version is version_compare(7, '<')
  tags:
    - checks


- name: Fail if not a new release of Debian
  fail:
    msg: "{{ ansible_distribution_version }} is not an acceptable version of {{ ansible_distribution }} for this role"
  when:
    - ansible_distribution == "Debian"
    - ansible_distribution_version is version_compare(8.0, '<')
  tags:
    - checks

- block:
    - name: Fail for a new release of Ubuntu
      fail:
        msg: |
          {{ ansible_distribution_version }} is not an acceptable version of {{ ansible_distribution }} for this role
      when:
        - ansible_distribution_version is version_compare("18.04", '>')

    - name: Fail for a old release of Ubuntu
      fail:
        msg: |
          {{ ansible_distribution_version }} is not an acceptable version of {{ ansible_distribution }} for this role
      when:
        - ansible_distribution_version is version_compare("16.04", '<')
  when:
    - ansible_distribution == "Ubuntu"
  tags:
    - checks

- block:
    - name: tower version is too old
      fail:
        msg: "tower version is '{{ tower_version }}' the minimum version is '{{ tower_minimum_version }}'. \n\n\n See https://code.getnoc.com/noc/tower/blob/master/UPDATING.md  \n\n\n "
      when: "'old' in tower_version"

    - name: tower version is old
      fail:
        msg: |

          tower version is '{{ tower_version }}' the minimum version is '{{ tower_minimum_version }}'.

          See https://code.getnoc.com/noc/tower/blob/master/UPDATING.md

      when: "tower_version is version_compare(tower_minimum_version, '<')"
  when:
    - tower_version != ''
  tags:
    - checks
