# Migrate database schema
---

- name: restart consul on freebsd
  service:
    name: consul
    state: restarted
  when: "'FreeBSD' in ansible_system"

- name: pause for 10 sec on freebsd. wait for consul
  pause:
    seconds: 12
  when: "'FreeBSD' in ansible_system"

- name: restart consul-template on freebsd
  service:
    name: consul-template
    state: restarted
  when: "'FreeBSD' in ansible_system"

- name: pause for 5 sec on freebsd. wait for consul-template
  pause:
    seconds: 5
  when: "'FreeBSD' in ansible_system"

- name: Migrate
  command: ./noc migrate
  args:
    chdir: "{{ noc_root }}"
  become_user: "{{ noc_user }}"
  become: yes
  register: migrate_out
  changed_when: "'Nothing to migrate' not in migrate_out.stdout"

- name: Ensure Mongo indecies
  command: ./noc ensure-indexes
  args:
    chdir: "{{ noc_root }}"
  become_user: "{{ noc_user }}"
  changed_when: False

- name: Apply pools
  command: "{{ noc_root }}/scripts/deploy/apply-pools"
  args:
    chdir: "{{ noc_root }}"
  become_user: "{{ noc_user }}"
  become: yes
  register: result
  changed_when: "'CHANGED' in result.stdout"

- name: Install collections
  command: "{{ noc_root }}/scripts/deploy/install-packages requirements/{{ item }}.json"
  args:
    chdir: "{{ noc_root }}"
  register: s
  changed_when: "'CHANGED' in s.stdout"
  with_items:
    - collections
  environment:
    http_proxy: "{{http_proxy}}"
    https_proxy: "{{http_proxy}}"
  tags:
    - requirements
    - coll_sync

- name: test if collections dir is empty
  stat:
    path: "{{ noc_root }}/collections/sa.profilecheckrules"
  register: coll_exists
  tags:
    - coll_sync

- name: fail if collections not found
  fail:
    msg: "Please run install_everything deploy and ensure dir {{ noc_root }}/collections/ is not empty"
  when: not coll_exists.stat.exists
  tags:
    - coll_sync

- name: Synchronize collections
  command: ./noc collection sync
  args:
    chdir: "{{ noc_root }}"
  become_user: "{{ noc_user }}"
  become: yes
  when: coll_exists.stat.exists
  tags:
    - coll_sync

- name: Synchronize permissions
  command: ./noc sync-perm
  args:
    chdir: "{{ noc_root }}"
  become_user: "{{ noc_user }}"
  become: yes
  tags:
    - perms

- name: Synchronize MIBs
  command: ./noc sync-mibs
  args:
    chdir: "{{ noc_root }}"
  become_user: "{{ noc_user }}"
  become: yes
  register: mibs_out
  changed_when: mibs_out.stdout | length > 5
