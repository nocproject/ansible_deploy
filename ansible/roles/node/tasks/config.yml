- name: Generate NOC config
  template:
    src: "etc/noc.yml.j2"
    dest: "{{ noc_etc }}/noc.yml"
  no_log: true
  tags:
    - config
    - noc_config

- name: Setup supervisor config
  template:
    src: "etc/supervisord.conf.j2"
    dest: "{{ noc_etc }}/supervisord.conf"
  no_log: true
  tags:
    - config
    - noc_config

- name: Set up noc.conf 1/2
  ini_file:
    dest: "{{noc_etc}}/noc.conf"
    section: "{{item.section}}"
    option: "{{item.option}}"
    value: "{{item.value}}"
    create: yes
  no_log: true
  with_items:
    - section: main
      option: secret_key
      value: "{{ django_key }}"
    - section: main
      option: language_code
      value: "{{ web_ui_language }}"
    - section: database
      option: name
      value: "{{ noc_pg_db }}"
    - section: database
      option: user
      value: "{{ noc_pg_user }}"
    - section: database
      option: password
      value: "{{ noc_pg_password }}"
    - section: database
      option: host
      value: "{{postgres_master}}"
    - section: nosql_database
      option: name
      value: "{{ noc_mongo_db }}"
    - section: nosql_database
      option: user
      value: "{{ noc_mongo_user }}"
    - section: nosql_database
      option: password
      value: "{{ noc_mongo_password }}"
    - section: nosql_database
      option: host
      value: "{{ groups['svc-mongod'] | join(',') }}"
    - section: nosql_database
      option: replica_set
      value: "{{ noc_mongo_replicaset }}"
    - section: customization
      option: installation_name
      value: "{{ noc_installation_name }}"
  tags:
    - config
    - noc_config

- name: Set up noc.conf for sentry 2/2
  ini_file:
    dest: "{{noc_etc}}/noc.conf"
    section: "{{item.section}}"
    option: "{{item.option}}"
    value: "{{item.value}}"
    create: yes
  no_log: true
  with_items:
    - section: main
      option: sentry_url
      value: "{{sentry_url}}"
    - section: main
      option: sentry_js_token
      value: "{{sentry_js_token}}"
  when: "sentry_secret_key is defined and sentry_secret_key
      and sentry_js_token is defined and sentry_js_token"
  tags:
    - config
    - noc_config

- name: install services templates
  template:
    src: "etc/services/{{item}}"
    dest: "{{noc_etc}}/services/{{item}}"
    owner: "{{noc_user}}"
    mode: "0644"
  with_items:
    - activator.conf
    - bi.conf
    - card.conf
    - chwriter.conf
    - classifier.conf
    - correlator.conf
    - discovery.conf
    - escalator.conf
    - grafanads.conf
    - login.conf
    - mailsender.conf
    - mrt.conf
    - notebook.conf
    - notifier.conf
    - omap.conf
    - ping.conf
    - pmwriter.conf
    - sae.conf
    - scheduler.conf
    - sync.conf
    - syslogcollector.conf
    - tgsender.conf
    - trapcollector.conf
    - web.conf
  tags:
    - config
    - noc_config

- name: install various configs
  copy:
    src: "etc/{{item.file}}"
    dest: "{{item.dest}}"
    owner: "{{noc_user}}"
    mode: "0644"
  with_items:
    - file: fias.defaults
      dest: "{{noc_etc}}/address/fias.defaults"
    - file: babel.cfg
      dest: "{{noc_etc}}/babel.cfg"
    - file: beef.defaults
      dest: "{{noc_etc}}/beef.defaults"
    - file: noc.defaults
      dest: "{{noc_etc}}/noc.defaults"
  tags:
    - config
    - noc_config

- name: Build supervisor config
  command: "{{ noc_root }}/scripts/deploy/apply-config {{ ansible_nodename }}"
  register: result
  changed_when: "'CHANGED' in result.stdout"
  args:
    chdir: "{{ noc_root }}"
  tags:
    - config
    - noc_config