- name: "Include OS-specific tasks"
  include: "os/{{ ansible_distribution }}/main.yml"

- name: render facts
  set_fact:
    telegraf_prometheus_enabled: "{{telegraf_prometheus_enabled}}"
    telegraf_influxdb_enabled: "{{telegraf_influxdb_enabled}}"

- name: render telegraf config
  template:
    src: "telegraf/telegraf.conf.j2"
    dest: "{{etc_prefix}}/telegraf/telegraf.conf"
  notify: restart telegraf
  tags:
    - config

- name: render telegraf config inputs
  template:
    src: "telegraf/basic_inputs.conf.j2"
    dest: "{{ telegraf_confd_path }}/basic_inputs.conf"
  notify: reload telegraf
  tags:
    - config

- name: render telegraf config prom config
  template:
    src: "telegraf/prom.conf.j2"
    dest: "{{ telegraf_confd_path }}/prom.conf"
  when: telegraf_prometheus_enabled
  notify: reload telegraf
  tags:
    - config

- name: render telegraf config influxdb config
  template:
    src: "telegraf/influx.conf.j2"
    dest: "{{ telegraf_confd_path }}/influx.conf"
  when: telegraf_influxdb_enabled
  notify: reload telegraf
  tags:
    - config

- name: remove influxdb output if disabled
  file:
    state: absent
    path: "{{ telegraf_confd_path }}/influx.conf"
  when: not telegraf_influxdb_enabled
  notify: reload telegraf

- name: remove prom output if disabled
  file:
    state: absent
    path: "{{ telegraf_confd_path }}/prom.conf"
  when: not telegraf_prometheus_enabled
  notify: reload telegraf

- name: Enable telegraf system service
  service:
    name: telegraf
    enabled: yes
    state: started
  tags:
    - config

- name: copy telegraf consul templates
  template:
    src: telegraf.json
    dest: "{{consul_configd_path}}/telegraf.json"
  notify: reload consul
  when: "'Linux' in ansible_system and telegraf_prometheus_enabled"
  ignore_errors: yes # race condition
  tags:
    - consul