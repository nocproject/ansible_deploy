---
# http://www.ibm.com/support/knowledgecenter/SSEPGG_10.5.0/com.ibm.db2.luw.qb.server.doc/doc/t0008238.html?lang=ru
- name: tune systcl for PostgesSQL
  sysctl:
    name: "{{item.name}}"
    value: "{{item.value}}"
    state: present
    reload: yes
  with_items:
    - { name: kernel.shmmax, value: "{{ kernel_shmmax }}" }
    - { name: kernel.shmall, value: "{{ kernel_shmall }}" }
    - { name: kernel.sem, value: '250 256000 400 4096' }
  tags:
    - config
  when: "'Linux' in ansible_system"


#
# Remove me after 1 dec 2017
#
- block:
  - name: setup env
    file:
      src: "{{item.name}}"
      dest: "{{item.dest}}"
      mode: "{{item.mode}}"
      owner: "{{noc_user}}"
      state: absent
    ignore_errors: true
    no_log: true
    with_items:
      - name: env.j2
        dest: "{{ noc_root }}/var/etc/postgres/env"
        mode: "u=rw,g=r,o=r"
      - name: pgpass.j2
        dest: "{{ noc_root }}/var/etc/postgres/.pgpass"
        mode: "u=rw,g-rwx,o-rwx"

  - name: Creating postgres directories
    file:
      path: "{{item}}"
      state: absent
    with_items:
      - "{{noc_root}}/var/etc/postgres"

- include: "os/{{ ansible_distribution }}/main.yml"

- block:
  - name: Setting pg_hba.conf
    lineinfile:
      dest: "{{postgresql_hba_path}}"
      line: "host    all             all             0.0.0.0/0            md5"
    notify: reload postgres
    tags:
      - config

  - name: Exclude postgres.conf
    lineinfile:
      dest: "{{postgresql_conf_path}}"
      line: "include = '{{ noc_root }}/var/etc/postgres/postgres.conf'"
      state: absent
    notify: restart postgres
    tags:
      - config

  - name: Including postgres.conf
    lineinfile:
      dest: "{{postgresql_conf_path}}"
      line: "include = '{{ postgresql_conf_prefix }}/noc.conf'"
    notify: restart postgres
    tags:
      - config

  - name: Setting config
    template:
      src: "postgres.conf.j2"
      dest: "{{ postgresql_conf_prefix }}/noc.conf"
    notify: restart postgres
    tags:
      - config

  - name: Enable postgres system service
    service:
      name: "{{postgres_system_service}}"
      enabled: yes
      state: started

  - include: "users.yml"
    become_user: "{{postgres_user}}"

  - name: install pgpassword for consul user
    file:
      src: "pgpass.j2"
      dest: "{{ consul_home }}/.pgpass"
      mode: "0400"
      owner: "{{consul_user}}"
      state: absent
    no_log: true

  - name: copy postgres consul templates
    template:
      src: postgres.json.j2
      dest: "{{consul_configd_path}}/postgres.json"
    notify: reload consul
    tags:
      - consul

  - name: copy postgres check script
    template:
      src: postgres_check.sh.j2
      dest: "{{consul_scripts_path}}/postgres_check.sh"
      mode: u+rx
      owner: "{{consul_user}}"
    no_log: true
    notify: reload consul
    tags:
      - consul

  when: not patroni_enabled

- name: Install postgres monitoring
  template:
    src: "etc/telegraf/telegraf.d/postgres.conf.j2"
    dest: "{{ telegraf_confd_path }}/postgres.conf"
  notify: reload telegraf
  no_log: true
  tags:
    - config
    - telegraf

- meta: flush_handlers

