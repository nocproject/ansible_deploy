- name: Check ansible version
  fail:
    msg: "{{ ansible_version.full }} is not supported by this role. Please use atleast 2.3.0.0. See https://code.getnoc.com/noc/tower/blob/master/UPDATING.md for details."
  when: ansible_version is defined and ansible_version.full | version_compare('2.3.0.0', '<')

- name: Check distribution compatibility
  fail:
    msg: "{{ ansible_distribution }} is not supported by this role"
  when: ansible_distribution not in ['RedHat', 'CentOS', 'Debian', 'Ubuntu', 'FreeBSD']

- name: Fail if not a new release of Red Hat / CentOS
  fail:
    msg: "{{ ansible_distribution_version }} is not an acceptable version of {{ ansible_distribution }} for this role"
  when: ansible_distribution in ['RedHat', 'CentOS'] and ansible_distribution_version|version_compare(7, '<')

- name: Fail if not a new release of Debian
  fail:
    msg: "{{ ansible_distribution_version }} is not an acceptable version of {{ ansible_distribution }} for this role"
  when: ansible_distribution == "Debian" and ansible_distribution_version|version_compare(8.0, '<')

- block:
  - name: tower version is too old
    fail:
      msg: "tower version is '{{tower_version}}' the minimum version is '{{tower_minimum_version}}'. \n\n\n See https://code.getnoc.com/noc/tower/blob/master/UPDATING.md  \n\n\n "
    when: "'old' in tower_version"

  - name: tower version is old
    fail:
      msg: "tower version is '{{tower_version}}' the minimum version is '{{tower_minimum_version}}'. \n\n\n  See https://code.getnoc.com/noc/tower/blob/master/UPDATING.md  \n\n\n "
    when: "tower_version|version_compare(tower_minimum_version, '<')"
  when: tower_version != ''

- name: No mongodb server set
  fail:
    msg: "No mongodb server set. Please setup at least one. "
  when: "'svc-mongod' not in groups"

- block:
  - name: No postgres server set
    fail:
      msg: "No postgres server set. Please setup one."
    when: "'svc-postgres' not in groups and 'svc-patroni' in groups"

- name: prepare pgbouncer facts
  set_fact:
    host_count: "{{hostvars | count}}"
    pgbouncer_exists: "{{groups['svc-pgbouncer'] | count >1}}"
    pgbouncer_count: "{{groups['svc-pgbouncer'] | count}}"

- name: Check pgbouncer
  fail:
    msg: "Pgbounser must be either one or one per node."
  when: "pgbouncer_exists and (pgbouncer_count==1 or pgbouncer_count !=host_count)"

- name: Monitoring output is not choosen
  fail:
    msg: "Either PROMETHEUS_ENABLED or INFLUXDB_ENABLED have to be True. otherwise telegraf will not startup"
  when: not telegraf_influxdb_enabled and not telegraf_prometheus_enabled

- name: Ensure tower url
  fail:
    msg: "Please ensure that correct settings has been provided on tower settings page and they was saved."
  when: noc_repo=="http://example.com/hg/VQ3W6R"

- block:
  - name: Ensure consul setup
    fail:
      msg: "No consul bootstrap was set up. Please set on one node two consuls."
    when: "'svc-consul-server' not in groups"

  - name: Ensure consul setup
    fail:
      msg: "consul servers have to be set up on 1,3 or 5 nodes. less is better. current count is {{groups['svc-consul'] | length}}"
    when: groups["svc-consul"] | length not in [1,3,5]
  when: "'svc-consul' in groups"

- block:
  - name: prepare nsqd facts
    set_fact:
      nsqd_count: "{{groups['svc-nsqd'] | count}}"
      nsqlookupd_count: "{{groups['svc-nsqlookupd'] | count}}"

  - name: Check nsqd
    fail:
      msg: "nsqd must be one per node."
    when: nsqd_count != host_count

  - name: check if nsqlookupd is set
    fail:
      msg: "you have to add at least one nsqlookupd. two recommended"
    when: nsqlookupd_count  == "0"

- name: fail if patroni set for one node
  fail:
    msg: "Patroni can be installed when node count is more than one."
  when: play_hosts | length == 1 and groups['svc-patroni'] | length > 0

- name: fail if haproxy set for one node
  fail:
    msg: "Haproxy can be installed when node count is more than one."
  when: play_hosts | length == 1 and groups['svc-haproxy'] | length > 0

- name: fail if keepalived set for one node
  fail:
    msg: "keepalived can be installed when node count is more than one."
  when: play_hosts | length == 1 and groups['svc-keepalived'] | length > 0

- name: fail if patroni set only for one node
  fail:
    msg: "patroni have to be installed on atleast two nodes"
  when: groups['svc-patroni'] | length < 2

- name: fail if haproxy set only for one node
  fail:
    msg: "Haproxy have to be installed on atleast two nodes"
  when: groups['svc-haproxy'] | length < 2

- name: fail if keepalived set only for one node
  fail:
    msg: "keepalived have to be installed on atleast two nodes"
  when: groups['svc-keepalived'] | length < 2