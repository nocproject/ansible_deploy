global
    stats socket /var/run/haproxy.sock mode 600 level admin
    stats timeout 2m
    maxconn 800

defaults
    log global
    mode tcp
    retries 2
    timeout client 30m
    timeout connect 4s
    timeout server 30m
    timeout check 5s

{% if haproxy_stats_enabled %}
listen  stats   {{ansible_host}}:3000
    mode            http
    log             global
    maxconn 10
    timeout queue   100s

    stats enable
    stats hide-version
    stats refresh 30s
    stats show-node
    stats auth {{haproxy_stats_user}}:{{haproxy_stats_password}}
    stats uri  /haproxy?stats

{% endif %}


{% if 'svc-patroni' in groups and groups["svc-patroni"] | length > 0   %}

frontend ft_postgresql
    bind *:{{haproxy_patroni_listen}}
    default_backend postgres-patroni

backend postgres-patroni
    option httpchk OPTIONS /master # use OPTIONS instead of GET https://github.com/zalando/patroni/issues/331
    http-check expect status 200
    default-server inter 3s fall 3 rise 2
    {% for n in groups['svc-patroni'] %}
     server cluster-pgsql-{{loop.index}} {{hostvars[n].ansible_host}}:5432 maxconn {{postgres_max_connections}} check port {{patroni_listen}} on-marked-down shutdown-sessions
    {% endfor %}

{%endif%}

{% if 'svc-clickhouse' in groups and groups["svc-clickhouse"] | length >= 1   %}

frontend ft_clickhouse
    bind *:{{haproxy_clickhouse_listen}}
    mode http
    default_backend clickhouse

backend clickhouse
    option httpchk GET /
    mode http
    http-check expect status 200
    default-server inter 3s fall 3 rise 2
    {% for n in groups['svc-clickhouse'] %}
       server clickhouse-{{loop.index}} {{hostvars[n].ansible_host}}:8123 maxconn 100 check port 8123 on-marked-down shutdown-sessions
    {% endfor %}

{%endif%}