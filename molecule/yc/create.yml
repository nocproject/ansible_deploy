---
- name: Create
  hosts: localhost
  connection: local
  gather_facts: false
  tasks:
#    - name: Ensure directory exist
#      file:
#        path: "../yc/{{ item.distr }}"
#        state: directory
#      with_items: "{{ molecule_yml.platforms }}"

    - name: Generate terraform file
      template:
        src: templates/template.tf
        dest: "../yc/{{ item.distr }}.tf"
      with_items: "{{ molecule_yml.platforms }}"

    - name: Create molecule instance(s)
      terraform:
        project_path: "../yc/"
        state: present
        force_init: true
        #state_file: "{{ molecule_yml.driver.distr }}.tfstate"
      register: server
      with_items: "{{ molecule_yml.platforms }}"

    - debug:
        var: server.results

    - name: Populate instance config dict
      set_fact:
        instance_config_dict:
          'instance': "{{ item.item.name }}"
          'address': "{{ item.outputs.internal_ip_address_vm_1.value }}"
          'external_address': "{{ item.outputs.external_ip_address_vm_1.value }}"
          'user': "{{ item.item.ssh_user }}"
          'port': "22"
          'identity_file': "{{ molecule_yml.driver.ssh_identity_file }}"
      register: instance_config_dict
      with_items: "{{ server.results }}"

    - debug:
        var: instance_config_dict
#
#
#    - name: Save internal address
#      set_fact:
#        internal_ip_address: "{{ server.results.outputs.internal_ip_address_vm_1.value }}"
#
#    - debug:
#        var: internal_ip_address

#      when: server.changed | bool
#      with_items: "{{ server.results }}"

#    - debug:
#        var: instance_config_dict

#    - name: Convert instance config dict to a list
#      set_fact:
#        instance_conf: "{{ instance_config_dict.results | map(attribute='ansible_facts.instance_conf_dict') | list }}"
#        instance_conf: "{{ instance_config_dict | list }}"
#      when: server.changed | bool

    - name: test
      set_fact:
        instance_conf: "{{ instance_conf|default([]) + [ instance_config_dict ] }}"

    - debug:
        var: instance_conf

    - name: Dump instance config
      copy:
        # NOTE(retr0h): Workaround for Ansible 2.2.
        #               https://github.com/ansible/ansible/issues/20885
        content: "{{ instance_conf | to_json | from_json | molecule_to_yaml | molecule_header }}"
        dest: "{{ molecule_instance_config }}"
#      when: server.changed | bool

    - name: Wait for SSH
      wait_for:
        port: "22"
        host: "{{ item.address }}"
        search_regex: SSH
        delay: 10
        timeout: 600
      with_items: "{{ lookup('file', molecule_instance_config) | molecule_from_yaml }}"

#    - pause:
#        minutes: 10
